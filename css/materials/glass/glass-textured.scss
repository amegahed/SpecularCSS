/******************************************************************************\
|                                                                              |
|                             glass-textured.scss                              |
|                                                                              |
|******************************************************************************|
|                                                                              |
|        This defines the dom and svg visual styles for this application.      |
|                                                                              |
|        Author(s): Abe Megahed                                                |
|                                                                              |
|        This file is subject to the terms and conditions defined in           |
|        'LICENSE.txt', which is part of this source code distribution.        |
|                                                                              |
|******************************************************************************|
|        Copyright (C) 2016-2023, Megahed Labs LLC, www.megahedlabs.com        |
\******************************************************************************/

@import "../../colors/colors.scss";
@import "glass.scss";

//
// mixins
//

@mixin round-textured-glass ($color: white, $direction: bottom, $border-style: outset) {
	background:

		// transmitted
		//
		radial-gradient(ellipse 50% 50% at 50% 85%,
			faded(lightened($color, 50%), $transmission-strength) 0%,
			faded($color, $transmission-strength) 50%,
			faded($color, 0%) 100%) no-repeat,

		// reflected
		//
		linear-gradient(to $direction,
			faded($color, 0%) 33%,
			faded($color, 50%) 100%) no-repeat,

		// diffuse
		//
		darkened($color, 30%);

	position: relative;
	overflow: hidden;

	&:after {
		position: absolute;
		content: '';
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		pointer-events: none;

		background:

			// highlight
			//
			radial-gradient(ellipse $round-highlight-width $round-highlight-height at $round-highlight-hoffset $round-highlight-voffset,
				faded(white, $highlight-strength) 0%,
				faded(white, $highlight-strength) $highlight-size,
				faded(white, 0%) 100%) no-repeat,

			// specular
			//
			radial-gradient(ellipse $round-specular-width $round-specular-height at $round-specular-hoffset $round-specular-voffset,
				faded(white, $specular-strength) 0%,
				faded(white, $specular-strength) $specular-size,
				faded(white, 0%) 100%) no-repeat;
	}

	// borders
	//
	@if ($border-style == inset) {
		border-color: $color;
	} @else if ($border-style == outset) {
		border-color: darkened($color, 10%);
	}
}

@mixin rounded-textured-glass ($color: white, $direction: bottom, $border-style: outset) {
	background:

		// left shading
		//
		linear-gradient(to right,
			faded(darkened($color, 20%), 50%) 0%,
			transparent $border-radius) no-repeat,

		// right shading
		//
		linear-gradient(to left,
			faded(darkened($color, 20%), 50%) 0%,
			transparent $border-radius) no-repeat,

		// transmitted
		//
		radial-gradient(ellipse 50% 50% at 50% 85%,
			faded(lightened($color, 50%), $transmission-strength) 0%,
			faded($color, $transmission-strength) 50%,
			faded($color, 0%) 100%) no-repeat,

		// diffuse
		//
		darkened($color, 30%);

	position: relative;
	overflow: hidden;

	&:after {
		position: absolute;
		content: '';
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		pointer-events: none;

		background:

			// highlight
			//
			linear-gradient(to $direction,
				faded(white, $highlight-strength) 0%,
				faded(white, 0%) 30%) no-repeat,
	}

	// borders
	//
	@if ($border-style == inset) {
		border-color: $color;
	} @else if ($border-style == outset) {
		border-color: darkened($color, 10%);
	}
}
/******************************************************************************\
|                                                                              |
|                             _rounded-chalk.scss                              |
|                                                                              |
|******************************************************************************|
|                                                                              |
|        This defines the dom and svg visual styles for this application.      |
|                                                                              |
|        Author(s): Abe Megahed                                                |
|                                                                              |
|        This file is subject to the terms and conditions defined in           |
|        'LICENSE.txt', which is part of this source code distribution.        |
|                                                                              |
|******************************************************************************|
|        Copyright (C) 2023, Specular CSS, http://www.specularcss.org          |
\******************************************************************************/

@use "../../colors/colors.scss";

//
// variables
//

$diffuse-strength: 100%;
$highlight-strength: 50%;

//
// mixins
//

@mixin shading ($color: white, $direction: bottom, $border-style: outset) {
	background:

		// diffuse
		//
		linear-gradient(to $direction,
			colors.lightened($color, 75%) 0%,
			$color 50%,
			colors.darkened($color, 10%) 100%) no-repeat;

	// borders
	//
	@if ($border-style == inset) {
		border-color: $color;
	} @else if ($border-style == outset) {
		border-color: colors.darkened($color, 10%);
	}
}

@mixin multilayer-shading ($color: white, $direction: bottom, $border-style: outset) {
	background:

		// diffuse
		//
		linear-gradient(to $direction,
			colors.faded(colors.lightened($color, 50%), $diffuse-strength) 0%,
			colors.faded($color, $diffuse-strength) 50%,
			colors.faded(colors.darkened($color, 10%), $diffuse-strength) 100%) no-repeat;

	position: relative;
	overflow: hidden;

	&:after {
		position: absolute;
		content: '';
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		pointer-events: none;

		background:

			// highlight
			//
			linear-gradient(to $direction,
				colors.faded(white, $highlight-strength) 0%,
				colors.faded(white, 0%) 30%) no-repeat;
	}

	// borders
	//
	@if ($border-style == inset) {
		border-color: $color;
	} @else if ($border-style == outset) {
		border-color: colors.darkened($color, 10%);
	}
}